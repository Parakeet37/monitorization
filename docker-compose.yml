version: '2'

services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - 9000:9000
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./data/portainer_data:/data"

  elasticsearch:
    build: ./elastic 
    container_name: elasticsearch
    volumes:
      - elastic:/usr/share/elasticsearch/data
      - ./elastic/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      discovery.type: single-node

  kibana:
    build: ./kibana
    container_name: kibana
    ports:
      - 5601:5601
    volumes:
      - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
    depends_on:
      - elasticsearch
    links:
      - elasticsearch
      
  mysql:
    image: mysql
    container_name: mysql
    environment:
      - MYSQL_DATABASE=mirthdb
      - MYSQL_USER=mirthdb
      - MYSQL_PASSWORD=mirthdb
      - MYSQL_ROOT_PASSWORD=mirthdb
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - my-db:/var/lib/mysql
    ports:
      - 3306:3306
    expose:
      - 3306
  
  mirth:
    image: nextgenhealthcare/connect
    container_name: mirth
    volumes:
      - ./mirth:/opt/connect/appdata
    environment:
      - DATABASE=mysql
      - DATABASE_URL=jdbc:mysql://mysql:3306/mirthdb
      - DATABASE_MAX_CONNECTIONS=20
      - DATABASE_USERNAME=mirthdb
      - DATABASE_PASSWORD=mirthdb
      - KEYSTORE_STOREPASS=docker_storepass
      - KEYSTORE_KEYPASS=docker_keypass
    ports:
      - 8443:8443/tcp
    depends_on:
      - mysql
    restart: on-failure
      
  logstash:
    build: ./logstash
    container_name: logstash
    ports:
      - "5044:5044/tcp"
      - "5044:5044/udp"
      - 9600:9600
      - 8080:8080
    depends_on:
      - elasticsearch
    links:
      - "elasticsearch"
  
#  beats:
#    build: ./beats
#    container_name: beats
#    volumes:
#      - "/var/lib/docker/containers:/var/lib/docker/containers:ro"
#      - "/var/run/docker.sock:/var/run/docker.sock:ro"
#    depends_on:
#      - logstash
#    ports:
#      - 5044
#    links:
#      - "logstash"
#      - "kibana"

#  generator:
#    build: ./generator
#    container_name: generator
#    depends_on: 
#      - postgres
#      - elasticsearch

volumes:
  elastic:
    driver: local
  data: {}
  config: {}
  my-db:
